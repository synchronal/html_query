name: Test & Audit
on:
  push:
    branches:
      - main
      - ci
      - ci-*
  pull_request:
    branches:
      - main
env:
  ELIXIR_VERSION: "1.13.4"
  OTP_VERSION: "25.0"
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps-v1-${{ hashFiles('**/mix.lock', '.tool-versions') }}
      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{ runner.os }}-build-v1-${{ hashFiles('**/mix.lock', '.tool-versions') }}
      - name: Install dependencies
        run: mix deps.get
        working-directory: .
      - name: Compile for test
        run: mix compile
        working-directory: .
  test:
    name: Test
    needs: build
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps-v1-${{ hashFiles('**/mix.lock', '.tool-versions') }}
      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{ runner.os }}-build-v1-${{ hashFiles('**/mix.lock', '.tool-versions') }}
      - name: Run tests
        run: mix test --color --warnings-as-errors
        working-directory: .
      - name: Run mix audit
        run: MIX_ENV=dev mix deps.audit
        working-directory: .
      - name: Warnings as errors
        run: mix compile --force --warnings-as-errors
        working-directory: .
  linter:
    name: Credo + Dialyxir
    needs: build
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps-v1-${{ hashFiles('**/mix.lock', '.tool-versions') }}
      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{ runner.os }}-build-v1-${{ hashFiles('**/mix.lock', '.tool-versions') }}
      - name: Cache PLTs
        uses: actions/cache@v2
        with:
          path: priv/plts
          key: ${{ runner.os }}-dialyxir-v1-${{ hashFiles('**/mix.lock', '.tool-versions') }}
      - name: Credo
        run: mix credo --strict
        working-directory: .
      - name: Run dialyzer
        run: mix dialyzer
        working-directory: .
      - name: Check Elixir formatting
        run: mix format --check-formatted
        working-directory: .
